// <auto-generated />
using System;
using HajurKoCarRental_backend.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HajurKoCarRental_backend.Migrations
{
    [DbContext(typeof(AppDataContext))]
    [Migration("20230502205304_upda-database")]
    partial class updadatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("HajurKoCarRental_backend.Model.CarsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("availability_status")
                        .HasColumnType("int");

                    b.Property<string>("brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("mileage")
                        .HasColumnType("float");

                    b.Property<string>("model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("registration_number")
                        .HasColumnType("int");

                    b.Property<double>("rental_cost")
                        .HasColumnType("float");

                    b.Property<int>("year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("HajurKoCarRental_backend.Model.DamagedCarsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Cars_id")
                        .HasColumnType("int");

                    b.Property<int>("Users_id")
                        .HasColumnType("int");

                    b.Property<string>("damage_description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("repair_cost")
                        .HasColumnType("int");

                    b.Property<string>("settlement_status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Cars_id");

                    b.HasIndex("Users_id");

                    b.ToTable("DamagedCars");
                });

            modelBuilder.Entity("HajurKoCarRental_backend.Model.NotificationModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Cars_id")
                        .HasColumnType("int");

                    b.Property<int?>("Offer_id")
                        .HasColumnType("int");

                    b.Property<int>("Users_id")
                        .HasColumnType("int");

                    b.Property<string>("notification_description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Cars_id");

                    b.HasIndex("Offer_id");

                    b.HasIndex("Users_id");

                    b.ToTable("Notification");
                });

            modelBuilder.Entity("HajurKoCarRental_backend.Model.OffersModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Cars_id")
                        .HasColumnType("int");

                    b.Property<int>("Users_id")
                        .HasColumnType("int");

                    b.Property<double>("offer_price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("Cars_id");

                    b.HasIndex("Users_id");

                    b.ToTable("Offers");
                });

            modelBuilder.Entity("HajurKoCarRental_backend.Model.RentalHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Cars_id")
                        .HasColumnType("int");

                    b.Property<int>("Users_id")
                        .HasColumnType("int");

                    b.Property<string>("authorized_by")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("rental_charge")
                        .HasColumnType("float");

                    b.Property<int>("rental_duration")
                        .HasColumnType("int");

                    b.Property<DateTime>("requested_date")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Cars_id");

                    b.HasIndex("Users_id");

                    b.ToTable("RentalHistory");
                });

            modelBuilder.Entity("HajurKoCarRental_backend.Model.RentalModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Cars_id")
                        .HasColumnType("int");

                    b.Property<int>("Users_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("end_date")
                        .HasColumnType("datetime2");

                    b.Property<double>("rental_amount")
                        .HasColumnType("float");

                    b.Property<string>("rental_status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("start_date")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Cars_id");

                    b.HasIndex("Users_id");

                    b.ToTable("RentalRequest");
                });

            modelBuilder.Entity("HajurKoCarRental_backend.Model.UserModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("date_of_birth")
                        .HasColumnType("datetime2");

                    b.Property<string>("document")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email_address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("full_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("last_login")
                        .HasColumnType("datetime2");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone_number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("profile_picture")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("HajurKoCarRental_backend.Model.DamagedCarsModel", b =>
                {
                    b.HasOne("HajurKoCarRental_backend.Model.CarsModel", "Cars")
                        .WithMany()
                        .HasForeignKey("Cars_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HajurKoCarRental_backend.Model.UserModel", "Users")
                        .WithMany()
                        .HasForeignKey("Users_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cars");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("HajurKoCarRental_backend.Model.NotificationModel", b =>
                {
                    b.HasOne("HajurKoCarRental_backend.Model.CarsModel", "Cars")
                        .WithMany()
                        .HasForeignKey("Cars_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HajurKoCarRental_backend.Model.OffersModel", "Offers")
                        .WithMany()
                        .HasForeignKey("Offer_id");

                    b.HasOne("HajurKoCarRental_backend.Model.UserModel", "Users")
                        .WithMany()
                        .HasForeignKey("Users_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cars");

                    b.Navigation("Offers");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("HajurKoCarRental_backend.Model.OffersModel", b =>
                {
                    b.HasOne("HajurKoCarRental_backend.Model.CarsModel", "Cars")
                        .WithMany()
                        .HasForeignKey("Cars_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HajurKoCarRental_backend.Model.UserModel", "Users")
                        .WithMany()
                        .HasForeignKey("Users_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cars");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("HajurKoCarRental_backend.Model.RentalHistory", b =>
                {
                    b.HasOne("HajurKoCarRental_backend.Model.CarsModel", "Cars")
                        .WithMany()
                        .HasForeignKey("Cars_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HajurKoCarRental_backend.Model.UserModel", "Users")
                        .WithMany()
                        .HasForeignKey("Users_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cars");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("HajurKoCarRental_backend.Model.RentalModel", b =>
                {
                    b.HasOne("HajurKoCarRental_backend.Model.CarsModel", "Cars")
                        .WithMany()
                        .HasForeignKey("Cars_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HajurKoCarRental_backend.Model.UserModel", "Users")
                        .WithMany()
                        .HasForeignKey("Users_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cars");

                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
